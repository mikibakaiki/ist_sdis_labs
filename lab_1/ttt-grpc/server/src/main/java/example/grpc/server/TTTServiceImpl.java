package example.grpc.server;

/* these are generated by the hello-world-server contract */
import example.grpc.TTT;
import example.grpc.TTTServiceGrpc;

import io.grpc.stub.StreamObserver;

public class TTTServiceImpl extends TTTServiceGrpc.TTTServiceImplBase {
	private TTTLogic ttt = new TTTLogic();

	@Override
	public void getBoard(TTT.CurrentBoardRequest request, StreamObserver<TTT.CurrentBoardResponse> responseObserver) {

		// HelloRequest has auto-generated toString method that shows its contents
		// System.out.println(request);

		// You must use a builder to construct a new Protobuffer object
		TTT.CurrentBoardResponse response = TTT.CurrentBoardResponse.newBuilder().setCurrentBoard(ttt.currentBoard()).build();

		// Use responseObserver to send a single response back
		responseObserver.onNext(response);

		// When you are done, you must call onCompleted
		responseObserver.onCompleted();
	}

	@Override
	public void getWinner(TTT.WinnerRequest request, StreamObserver<TTT.WinnerResponse> responseObserver) {

		// HelloRequest has auto-generated toString method that shows its contents
		// System.out.println(request);

		// You must use a builder to construct a new Protobuffer object
		TTT.WinnerResponse response = TTT.WinnerResponse.newBuilder().setWinnerId(ttt.checkWinner()).build();

		// Use responseObserver to send a single response back
		responseObserver.onNext(response);

		// When you are done, you must call onCompleted
		responseObserver.onCompleted();
	}

	@Override
	public void play(TTT.PlayerMoveRequest request, StreamObserver<TTT.PlayerMoveResponse> responseObserver) {

		// HelloRequest has auto-generated toString method that shows its contents
		// System.out.println(request);
		int rowNum = request.getRowNumber();
		int colNum = request.getColumnNumber();
		int playerNum = request.getPlayerNumber();

		// You must use a builder to construct a new Protobuffer object
		TTT.PlayerMoveResponse response = TTT.PlayerMoveResponse.newBuilder().setValidMove(ttt.play(rowNum, colNum, playerNum)).build();

		// Use responseObserver to send a single response back
		responseObserver.onNext(response);

		// When you are done, you must call onCompleted
		responseObserver.onCompleted();
	}

}
